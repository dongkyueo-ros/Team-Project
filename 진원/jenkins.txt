1. 클라우드  > 저장소 연동
2. 컨테이너, msa (EKS)
3. 모니터링 (AWS CloudWatch 혹은 오픈소스)
4. ci/cd, devops (젠킨스, AWS코드파이프라인,깃허브) + (가능하다면 ANSIBLE, Teraform도 고려해봐야함)

dev(ansible) git > ci/cd >  앤서블  >  배포


#젠킨스 설치시 필요한 서비스 설치
sudo yum -y install daemonize
sudo yum  -y install java-1.8.0-amazon-corretto
#젠킨스 설치
sudo wget -O jenkins.sh https://pkg.jenkins.io/redhat/jenkins-2.318-1.1.noarch.rpm
sudo rpm -ivh jenkins.sh

#enkins 서비스 시작 및 활성화
sudo systemctl enable --now jenkins

#초기 Jenkins 암호 확인
sudo cat /var/lib/jenkins/secrets/initialAdminPassword

#웹브라우저 접속
1. 보안그룹 8080/tcp 연결
2. 퍼블릭IP:8080 으로 접속

#플러그인 설치
1. 젠킨스관리 > 플러그인 관리 > 고급 에서 업데이트사이트 의 https 대신 http로 변경
2. skip-certificate-check 플러그인 설치
3. github 플러그인 설치


#젠킨스 설치
1. 소프트웨어 패키지가 인스턴스에서 최신 상태인지 확인
sudo yum update

2. Jenkins repo를 추가
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo

3. Jenkins-CI에서 키 파일을 가져와 패키지에서 설치하도록 설정합니다.
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade

4. Java 설치(아마존 리눅스 2023):
sudo yum -y install daemonize
sudo dnf install java-17-amazon-corretto -y

5. Jenkins 설치
sudo yum install -y jenkins

6. 부팅 시 Jenkins 서비스 자동 시작 및 서비스 기동
sudo systemctl enable --now jenkins

#웹브라우저 접속
1. 보안그룹 8080/tcp 연결
2. 퍼블릭IP:8080 으로 접속

#깃허브 연동
1. 젠킨스관리 > 시스템관리 >Github에서 add github server 클릭
2. credentials 에서 add 클릭
3. kind에 secret text로 변경
4. ID에는 깃허브 ID, Secret에는 깃허브에서 발급받은 토큰 입력(깃허브 토큰 발행시 admin, admin:repo_hook 권한 필요

#플러그인 설치
1. 젠킨스관리 > 플러그인 관리 > 고급 에서 업데이트사이트 의 https 대신 http로 변경(이걸해야 플러그인 설치가 됨)
1. skip-certificate-check 플러그인 설치
2. GitHub Integration 플러그인 설치

sudo yum install java-11-amazon-corretto-devel -y
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
sudo yum clean packages
sudo yum install -y jenkins

